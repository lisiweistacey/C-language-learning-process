//设计一个小程序来判断当前机器的字节库（大端）/(小端)
#include <stdio.h>
int check_sys()
{
	int a = 1;
	return (*((char*)&a));
}
int main()
{
	int ret = check_sys();
	if (ret == 1)
	{
		printf("小端\n");
	}
	else
	{
		printf("大端\n");
	}
	return 0;
}

//输出什么
#include <stdio.h>
int main()
{
	char a = -1;
	//10000000 00000000 00000000 00000001 原码
	//11111111 11111111 11111111 11111110 反码
	//11111111 11111111 11111111 11111111 补码
	//4个字节的补码存进a里面：存一个字节 11111111
	signed char b = -1;
	//11111111
	unsigned char c = -1;
	//11111111
	//a,b,c存进去的都是11111111，但取出来后结果不一样
	printf("a=%d,b=%d,c=%d", a, b, c);//-1, -1, 255
	//char到int会发生整型提升，整型提升按照原符号位来提升（补1和补0）
	//char a 默认为有符号位
	//11111111 11111111 11111111 11111111 整型提升后的补码
	//11111111 11111111 11111111 11111110 反码
	//10000000 00000000 00000000 00000001 输出原码，打印-1
	//char b 同 char a 打印-1
	//char c 为无符号位，补0
	//00000000 00000000 00000000 11111111(原反补相同)
	//00000000 00000000 00000000 11111111 输出原码，打印255
	return 0;
}

#include <stdio.h>
int main()
{
	char a = -128;
    //10000000 00000000 00000000 10000000
    //11111111 11111111 11111111 01111111
    //11111111 11111111 11111111 10000000
    //10000000
	printf("%u\n", a);//%u 打印无符号十进制数
    //10000000整型提升
    //11111111 11111111 11111111 10000000 补码
    //11111111 11111111 11111111 10000000 原码（无符号数，原反补相同）
    //4294967168
	return 0;
}

#include <stdio.h>
int main()
{
	int i = -20;
	//10000000 00000000 00000000 00010100
	//11111111 11111111 11111111 11101011
	//11111111 11111111 11111111 11101100
	unsigned int j = 10;
	//00000000 00000000 00000000 00001010
	printf("%d\n", i + j);//-10
	//按照补码的形式进行运算，最后格式化成为有符号整数
	//11111111 11111111 11111111 11110110 相加后的原码
	//00000000 00000000 00000000 00001001
	//00000000 00000000 00000000 00001010  -10
	return 0;
}

#include <stdio.h>
int main()
{
	unsigned int i;
	for (i = 9; i >= 0; i--)
	{
		printf("%u\n", i); //死循环
	}
	return 0;
}

#include <stdio.h>
#include <string.h>
int main()
{
	char a[1000];
	int i;
	for (i = 0; i < 1000; i++)
	{
		a[i] = -1 - i;
	}
	printf("%d\n", strlen(a));//255
	//char的范围: -128---127
	//-1,-2,.....,-128,127,126,...,2,1,0 (到0（\0）结束)
	return 0;
}

#include <stdio.h>
unsigned char i = 0;//0--255
int main()
{
	for (i = 0; i <= 255; i++)
	{
		printf("hello\n");//死循环（因为i一直小于255）
	}
	return 0;
}
